{"ast":null,"code":"import _defineProperty from \"/Users/macbook/Desktop/ff/JeddahMalls/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/macbook/Desktop/ff/JeddahMalls/frontend/src/components/Widget.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { randomNumber } from './app';\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.hasCustomGradientColor) {\n      this.fillId = \"widgetGrad\".concat(randomNumber());\n    }\n  }\n\n  get widgetContainerStyle() {\n    const _this$props = this.props,\n          changeRating = _this$props.changeRating,\n          widgetSpacing = _this$props.widgetSpacing,\n          isFirstWidget = _this$props.isFirstWidget,\n          isLastWidget = _this$props.isLastWidget,\n          ignoreInlineStyles = _this$props.ignoreInlineStyles;\n    const widgetContainerStyle = {\n      position: 'relative',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      paddingLeft: isFirstWidget ? undefined : widgetSpacing,\n      paddingRight: isLastWidget ? undefined : widgetSpacing,\n      cursor: changeRating ? 'pointer' : undefined\n    };\n    return ignoreInlineStyles ? {} : widgetContainerStyle;\n  }\n\n  get widgetSvgStyle() {\n    const _this$props2 = this.props,\n          ignoreInlineStyles = _this$props2.ignoreInlineStyles,\n          isCurrentHoveredWidget = _this$props2.isCurrentHoveredWidget,\n          widgetDimension = _this$props2.widgetDimension;\n    const widgetSvgStyle = {\n      width: widgetDimension,\n      height: widgetDimension,\n      transition: 'transform .2s ease-in-out',\n      transform: isCurrentHoveredWidget ? 'scale(1.1)' : undefined\n    };\n    return ignoreInlineStyles ? {} : widgetSvgStyle;\n  }\n\n  get pathStyle() {\n    const _this$props3 = this.props,\n          isSelected = _this$props3.isSelected,\n          isPartiallyFullWidget = _this$props3.isPartiallyFullWidget,\n          isHovered = _this$props3.isHovered,\n          hoverMode = _this$props3.hoverMode,\n          widgetEmptyColor = _this$props3.widgetEmptyColor,\n          widgetRatedColor = _this$props3.widgetRatedColor,\n          widgetHoverColor = _this$props3.widgetHoverColor,\n          gradientPathName = _this$props3.gradientPathName,\n          inheritFillId = _this$props3.inheritFillId,\n          ignoreInlineStyles = _this$props3.ignoreInlineStyles;\n    let fill;\n\n    if (hoverMode) {\n      if (isHovered) fill = widgetHoverColor;else fill = widgetEmptyColor;\n    } else {\n      if (isPartiallyFullWidget) fill = \"url('\".concat(gradientPathName, \"#\").concat(this.fillId || inheritFillId, \"')\");else if (isSelected) fill = widgetRatedColor;else fill = widgetEmptyColor;\n    }\n\n    const pathStyle = {\n      fill: fill,\n      transition: 'fill .2s ease-in-out'\n    };\n    return ignoreInlineStyles ? {} : pathStyle;\n  }\n\n  get widgetClasses() {\n    const _this$props4 = this.props,\n          isSelected = _this$props4.isSelected,\n          isPartiallyFullWidget = _this$props4.isPartiallyFullWidget,\n          isHovered = _this$props4.isHovered,\n          isCurrentHoveredWidget = _this$props4.isCurrentHoveredWidget,\n          ignoreInlineStyles = _this$props4.ignoreInlineStyles;\n    const widgetClasses = classNames({\n      'widget-svg': true,\n      'widget-selected': isSelected,\n      'multi-widget-selected': isPartiallyFullWidget,\n      'hovered': isHovered,\n      'current-hovered': isCurrentHoveredWidget\n    });\n    return ignoreInlineStyles ? {} : widgetClasses;\n  }\n\n  stopColorStyle(color) {\n    const stopColorStyle = {\n      stopColor: color,\n      stopOpacity: '1'\n    };\n    return this.props.ignoreInlineStyles ? {} : stopColorStyle;\n  }\n\n  get offsetValue() {\n    const selectedRating = this.props.selectedRating;\n    const ratingIsInteger = Number.isInteger(selectedRating);\n    let offsetValue = '0%';\n\n    if (!ratingIsInteger) {\n      const firstTwoDecimals = selectedRating.toFixed(2).split('.')[1].slice(0, 2);\n      offsetValue = \"\".concat(firstTwoDecimals, \"%\");\n    }\n\n    return offsetValue;\n  }\n\n  get renderIndividualGradient() {\n    const _this$props5 = this.props,\n          widgetRatedColor = _this$props5.widgetRatedColor,\n          widgetEmptyColor = _this$props5.widgetEmptyColor;\n    return React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: this.fillId,\n      x1: \"0%\",\n      y1: \"0%\",\n      x2: \"100%\",\n      y2: \"0%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"0%\",\n      className: \"stop-color-first\",\n      style: this.stopColorStyle(widgetRatedColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: this.offsetValue,\n      className: \"stop-color-first\",\n      style: this.stopColorStyle(widgetRatedColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: this.offsetValue,\n      className: \"stop-color-final\",\n      style: this.stopColorStyle(widgetEmptyColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"100%\",\n      className: \"stop-color-final\",\n      style: this.stopColorStyle(widgetEmptyColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const _this$props6 = this.props,\n          changeRating = _this$props6.changeRating,\n          hoverOverWidget = _this$props6.hoverOverWidget,\n          unHoverOverWidget = _this$props6.unHoverOverWidget,\n          inheritFillId = _this$props6.inheritFillId,\n          svgIconViewBox = _this$props6.svgIconViewBox,\n          svgIconPath = _this$props6.svgIconPath,\n          svg = _this$props6.svg,\n          hasCustomGradientColor = _this$props6.hasCustomGradientColor;\n    let customSvg = svg;\n\n    if (React.isValidElement(customSvg)) {\n      customSvg = React.cloneElement(customSvg, _objectSpread({}, this.props, {\n        fillId: this.fillId || inheritFillId\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"widget-container\",\n      style: this.widgetContainerStyle,\n      onMouseEnter: hoverOverWidget,\n      onMouseLeave: unHoverOverWidget,\n      onClick: changeRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, customSvg ? customSvg : React.createElement(\"svg\", {\n      viewBox: svgIconViewBox,\n      className: this.widgetClasses,\n      style: this.widgetSvgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, hasCustomGradientColor ? this.renderIndividualGradient : null, React.createElement(\"path\", {\n      className: \"widget\",\n      style: this.pathStyle,\n      d: svgIconPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Widget;","map":{"version":3,"sources":["/Users/macbook/Desktop/ff/JeddahMalls/frontend/src/components/Widget.jsx"],"names":["React","Component","randomNumber","Widget","constructor","props","hasCustomGradientColor","fillId","widgetContainerStyle","changeRating","widgetSpacing","isFirstWidget","isLastWidget","ignoreInlineStyles","position","display","verticalAlign","paddingLeft","undefined","paddingRight","cursor","widgetSvgStyle","isCurrentHoveredWidget","widgetDimension","width","height","transition","transform","pathStyle","isSelected","isPartiallyFullWidget","isHovered","hoverMode","widgetEmptyColor","widgetRatedColor","widgetHoverColor","gradientPathName","inheritFillId","fill","widgetClasses","classNames","stopColorStyle","color","stopColor","stopOpacity","offsetValue","selectedRating","ratingIsInteger","Number","isInteger","firstTwoDecimals","toFixed","split","slice","renderIndividualGradient","render","hoverOverWidget","unHoverOverWidget","svgIconViewBox","svgIconPath","svg","customSvg","isValidElement","cloneElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { randomNumber } from './app';\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props);\n    if (props.hasCustomGradientColor) {\n      this.fillId = `widgetGrad${randomNumber()}`;\n    }\n  }\n\n  get\n  widgetContainerStyle() {\n    const {\n      changeRating,\n      widgetSpacing,\n      isFirstWidget,\n      isLastWidget,\n      ignoreInlineStyles\n    } = this.props;\n\n    const widgetContainerStyle = {\n      position: 'relative',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      paddingLeft: isFirstWidget ? undefined : widgetSpacing,\n      paddingRight: isLastWidget ? undefined : widgetSpacing,\n      cursor: changeRating ? 'pointer' : undefined\n    };\n    return ignoreInlineStyles ? {} : widgetContainerStyle\n  }\n\n  get\n  widgetSvgStyle() {\n    const {\n      ignoreInlineStyles,\n      isCurrentHoveredWidget,\n      widgetDimension,\n    } = this.props;\n    const widgetSvgStyle = {\n      width: widgetDimension,\n      height: widgetDimension,\n      transition: 'transform .2s ease-in-out',\n      transform: isCurrentHoveredWidget ? 'scale(1.1)' : undefined\n    };\n\n    return ignoreInlineStyles ? {} : widgetSvgStyle;\n  }\n\n  get\n  pathStyle() {\n    const {\n      isSelected,\n      isPartiallyFullWidget,\n      isHovered,\n      hoverMode,\n      widgetEmptyColor,\n      widgetRatedColor,\n      widgetHoverColor,\n      gradientPathName,\n      inheritFillId,\n      ignoreInlineStyles\n    } = this.props;\n\n    let fill;\n    if (hoverMode) {\n      if (isHovered) fill = widgetHoverColor;\n      else fill = widgetEmptyColor;\n    } else {\n      if (isPartiallyFullWidget) fill = `url('${gradientPathName}#${this.fillId || inheritFillId}')`;\n      else if (isSelected) fill = widgetRatedColor;\n      else fill = widgetEmptyColor;\n    }\n\n    const pathStyle = {\n      fill: fill,\n      transition: 'fill .2s ease-in-out',\n    };\n\n    return ignoreInlineStyles ? {} : pathStyle;\n  }\n\n  get\n  widgetClasses() {\n    const {\n      isSelected,\n      isPartiallyFullWidget,\n      isHovered,\n      isCurrentHoveredWidget,\n      ignoreInlineStyles\n    } = this.props;\n\n    const widgetClasses = classNames({\n      'widget-svg': true,\n      'widget-selected': isSelected,\n      'multi-widget-selected': isPartiallyFullWidget,\n      'hovered': isHovered,\n      'current-hovered': isCurrentHoveredWidget\n    })\n\n    return ignoreInlineStyles ? {} : widgetClasses\n  }\n\n  stopColorStyle(color) {\n    const stopColorStyle = {\n      stopColor: color,\n      stopOpacity: '1'\n    };\n    return this.props.ignoreInlineStyles ? {} : stopColorStyle;\n  }\n\n  get\n  offsetValue() {\n    const selectedRating = this.props.selectedRating;\n    const ratingIsInteger = Number.isInteger(selectedRating);\n    let offsetValue = '0%';\n    if (!ratingIsInteger) {\n      const firstTwoDecimals = selectedRating.toFixed(2).split('.')[1].slice(0, 2);\n      offsetValue = `${firstTwoDecimals}%`;\n    }\n    return offsetValue;\n  }\n\n  get\n  renderIndividualGradient() {\n    const {\n      widgetRatedColor,\n      widgetEmptyColor,\n    } = this.props;\n    return (\n      <defs>\n        <linearGradient id={this.fillId} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" className=\"stop-color-first\" style={this.stopColorStyle(widgetRatedColor)} />\n          <stop offset={this.offsetValue} className=\"stop-color-first\" style={this.stopColorStyle(widgetRatedColor)} />\n          <stop offset={this.offsetValue} className=\"stop-color-final\" style={this.stopColorStyle(widgetEmptyColor)} />\n          <stop offset=\"100%\" className=\"stop-color-final\" style={this.stopColorStyle(widgetEmptyColor)} />\n        </linearGradient>\n      </defs>\n    );\n  }\n\n  render() {\n    const {\n      changeRating,\n      hoverOverWidget,\n      unHoverOverWidget,\n      inheritFillId,\n      svgIconViewBox,\n      svgIconPath,\n      svg,\n      hasCustomGradientColor\n    } = this.props;\n    let customSvg = svg;\n    if (React.isValidElement(customSvg)) {\n      customSvg = React.cloneElement(customSvg, {\n        ...this.props,\n        fillId: this.fillId || inheritFillId\n      });\n    }\n    return (\n      <div\n        className=\"widget-container\"\n        style={this.widgetContainerStyle}\n        onMouseEnter={hoverOverWidget}\n        onMouseLeave={unHoverOverWidget}\n        onClick={changeRating}\n      >\n        {customSvg ? customSvg :\n          <svg\n            viewBox={svgIconViewBox}\n            className={this.widgetClasses}\n            style={this.widgetSvgStyle}\n          >\n            {hasCustomGradientColor ? this.renderIndividualGradient : null}\n            <path\n              className=\"widget\"\n              style={this.pathStyle}\n              d={svgIconPath}\n            />\n          </svg>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Widget;"]},"metadata":{},"sourceType":"module"}