"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var GetApp_1 = __importDefault(require("@material-ui/icons/GetApp"));
var ra_core_1 = require("ra-core");
var dist_1 = __importDefault(require("jsonexport/dist"));
var Button_1 = __importDefault(require("./Button"));
var sanitizeRestProps = function (_a) {
    var basePath = _a.basePath, rest = __rest(_a, ["basePath"]);
    return rest;
};
/**
 * Extracts, aggregates and deduplicates the ids of related records
 *
 * @example
 *     const books = [
 *         { id: 1, author_id: 123, title: 'Pride and Prejudice' },
 *         { id: 2, author_id: 123, title: 'Sense and Sensibility' },
 *         { id: 3, author_id: 456, title: 'War and Peace' },
 *     ];
 *     getRelatedIds(books, 'author_id'); => [123, 456]
 *
 * @example
 *     const books = [
 *         { id: 1, tag_ids: [1, 2], title: 'Pride and Prejudice' },
 *         { id: 2, tag_ids: [2, 3], title: 'Sense and Sensibility' },
 *         { id: 3, tag_ids: [4], title: 'War and Peace' },
 *     ];
 *     getRelatedIds(records, 'tag_ids'); => [1, 2, 3, 4]
 *
 * @param {Object[]} records An array of records
 * @param {string} field the identifier of the record field to use
 */
exports.getRelatedIds = function (records, field) {
    return Array.from(new Set(records
        .filter(function (record) { return record[field] != null; })
        .map(function (record) { return record[field]; })
        .reduce(function (ids, value) { return ids.concat(value); }, [])));
};
/**
 * Helper function for calling the data provider with GET_MANY
 * via redux and saga, and getting a Promise in return
 *
 * @example
 *     fetchRelatedRecords(records, 'post_id', 'posts').then(posts =>
 *          posts.map(record => ({
 *              ...record,
 *              post_title: posts[record.post_id].title,
 *          }));
 */
var fetchRelatedRecords = function (dataProvider) { return function (data, field, resource) {
    return dataProvider
        .getMany(resource, { ids: exports.getRelatedIds(data, field) })
        .then(function (_a) {
        var data = _a.data;
        return data.reduce(function (acc, post) {
            acc[post.id] = post;
            return acc;
        }, {});
    });
}; };
var DefaultIcon = react_1.default.createElement(GetApp_1.default, null);
var defaultFilter = {};
var ExportButton = function (_a) {
    var exporter = _a.exporter, sort = _a.sort, _b = _a.filter, filter = _b === void 0 ? defaultFilter : _b, _c = _a.maxResults, maxResults = _c === void 0 ? 1000 : _c, resource = _a.resource, onClick = _a.onClick, _d = _a.label, label = _d === void 0 ? 'ra.action.export' : _d, _e = _a.icon, icon = _e === void 0 ? DefaultIcon : _e, rest = __rest(_a, ["exporter", "sort", "filter", "maxResults", "resource", "onClick", "label", "icon"]);
    var dataProvider = ra_core_1.useDataProvider();
    var notify = ra_core_1.useNotify();
    var handleClick = react_1.useCallback(function (event) {
        dataProvider
            .getList(resource, {
            sort: sort,
            filter: filter,
            pagination: { page: 1, perPage: maxResults },
        })
            .then(function (_a) {
            var data = _a.data;
            return exporter
                ? exporter(data, fetchRelatedRecords(dataProvider), dataProvider)
                : dist_1.default(data, function (err, csv) {
                    return ra_core_1.downloadCSV(csv, resource);
                });
        })
            .catch(function (error) {
            console.error(error);
            notify('ra.notification.http_error', 'warning');
        });
        if (typeof onClick === 'function') {
            onClick(event);
        }
    }, [
        dataProvider,
        exporter,
        filter,
        maxResults,
        notify,
        onClick,
        resource,
        sort,
    ]);
    return (react_1.default.createElement(Button_1.default, __assign({ onClick: handleClick, label: label }, sanitizeRestProps(rest)), icon));
};
ExportButton.propTypes = {
    basePath: prop_types_1.default.string,
    exporter: prop_types_1.default.func,
    filter: prop_types_1.default.object,
    label: prop_types_1.default.string,
    maxResults: prop_types_1.default.number,
    resource: prop_types_1.default.string.isRequired,
    sort: prop_types_1.default.exact({
        field: prop_types_1.default.string,
        order: prop_types_1.default.string,
    }),
    icon: prop_types_1.default.element,
};
exports.default = ExportButton;
